export type T_PLComDef = {
  namespace: string

  version: string

  editors: {
    ':root'?: {}[]

    view?: {}

    logic?: {}
  }

  getEditor(selector:string,editorId:string)
}

export type T_PLContext = {
  getComDef(def: { namespace: string, version: string }|string): T_PLComDef
}

export type T_PLComInfo = {
  id,
  title,
  style: { left, top, width, height }
}

export type T_PLItemEditorDef = {
  selector:string
  title: string
  type:string
  value:{
    get():any
    set(val):void
  }
}

export type T_PLItem = {
  type: 'com' | 'slot' | 'text' | 'image'

  title: string

  id: string

  def: {
    namespace: string
    version: string
  }

  style: { left, top, width, height }

  editors: T_PLItemEditorDef[]
}

export type T_PLEmits = {
  blur()

  focus(configs: {
    blur?()
    getConfigs(): {
      title: string,
      groups: {
        title: string,
        items: {}[]
      }[]
    }[]
  })

  config(catelogs: {
    title: string,
    groups: {
      title: string,
      items: {}[]
    }[]
  }[])
}

export type T_PLOn = {
  hover(fn: (item: T_PLItem) => void)

  focus(fn: (item: T_PLItem) => void)

  blur(fn: () => void)
}

export type T_PLNavViewExt = () => JSX.Element

export type T_PLGeoViewExt<DataType> = ({
                                          context,
                                          style,
                                          data,
                                          comAry,
                                          emits
                                        }: {
  context: T_PLContext
  style: { left, top, width, height }
  data: DataType
  comAry: T_PLComInfo[]
  emits: T_PLEmits
}) => JSX.Element

export type T_PLGeoViewCommand = ({
                                    createPortal
                                  }: {
  createPortal
}) => JSX.Element

export type T_Plugin = {
  namespace: string
  version: string
  title: string
  author: string
  ['author.zh']?: string
  description: string
  icon?: string | JSX.Element
  data?: {}

  contributes: {
    views?: {
      activityBar?: {
        tab?: {
          title: string
          icon: string | JSX.Element
        }
      },
      desn?: {
        nav?: {
          visible?: boolean
          view?: T_PLNavViewExt
        },
        geo?: {
          view?: T_PLGeoViewExt
          pattern?: string
          command?: T_PLGeoViewCommand
        },
        topl?: {
          visible?: boolean
        }
      }
    }
  }
}